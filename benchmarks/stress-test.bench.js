/**
 * –°—Ç—Ä–µ—Å—Å-—Ç–µ—Å—Ç EventBroker –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
 * –≠—Ç–æ—Ç —Ç–µ—Å—Ç –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã 5M+ events/sec –∏–∑ –æ—Ç—á–µ—Ç–∞
 */

const { EventBroker } = require('../dist/core/EventBroker');
const { LocalClient } = require('../dist/clients/LocalClient');

console.log('üí• –°–¢–†–ï–°–°-–¢–ï–°–¢ EventBroker - –í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –æ—Ç—á–µ—Ç–∞ üí•\n');

function stressTest() {
  const broker = new EventBroker({ defaultTabSync: false });
  const clientCount = 100;
  const eventsPerClient = 1000;
  const clients = [];
  let receivedCount = 0;
  let errorCount = 0;

  console.log(`üî• –°–æ–∑–¥–∞–µ–º ${clientCount} –∫–ª–∏–µ–Ω—Ç–æ–≤...`);

  // –°–æ–∑–¥–∞–µ–º –º–Ω–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–æ–≤
  for (let i = 0; i < clientCount; i++) {
    try {
      const client = new LocalClient(`stress-client-${i}`, broker);
      clients.push(client);

      // –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ —Å–æ–±—ã—Ç–∏—è —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫
      client.on('stress.test.v1', (event) => {
        try {
          receivedCount++;
          // –ò–º–∏—Ç–∏—Ä—É–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é –æ–±—Ä–∞–±–æ—Ç–∫—É –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
        } catch (e) {
          errorCount++;
        }
      });
    } catch (e) {
      errorCount++;
      console.error(`–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–∞ ${i}:`, e.message);
    }
  }

  console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–æ –∫–ª–∏–µ–Ω—Ç–æ–≤: ${clients.length}`);
  console.log(`üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Å—Ç—Ä–µ—Å—Å-—Ç–µ—Å—Ç: ${eventsPerClient} —Å–æ–±—ã—Ç–∏–π –æ—Ç –∫–∞–∂–¥–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞...`);

  const startTime = Date.now();
  const startMemory = process.memoryUsage();

  // –ö–∞–∂–¥—ã–π –∫–ª–∏–µ–Ω—Ç –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –º–Ω–æ–≥–æ —Å–æ–±—ã—Ç–∏–π
  clients.forEach((client, clientIndex) => {
    try {
      for (let i = 0; i < eventsPerClient; i++) {
        client.broadcast('stress.test.v1', {
          id: clientIndex * eventsPerClient + i,
          clientId: clientIndex,
          timestamp: Date.now(),
          payload: `Event ${i} from client ${clientIndex}`,
        });
      }
    } catch (e) {
      errorCount++;
      console.error(`–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç –∫–ª–∏–µ–Ω—Ç–∞ ${clientIndex}:`, e.message);
    }
  });

  // –î–∞–µ–º –≤—Ä–µ–º—è –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É
  setTimeout(() => {
    const endTime = Date.now();
    const endMemory = process.memoryUsage();
    const duration = endTime - startTime;

    const totalSent = clientCount * eventsPerClient;
    const expectedReceived = totalSent * (clientCount - 1); // –∫–∞–∂–¥—ã–π –ø–æ–ª—É—á–∞–µ—Ç –æ—Ç –≤—Å–µ—Ö –∫—Ä–æ–º–µ —Å–µ–±—è
    const throughput = Math.round(receivedCount / (duration / 1000));
    const deliveryRate = ((receivedCount / expectedReceived) * 100).toFixed(2);
    const memoryIncrease = (endMemory.heapUsed - startMemory.heapUsed) / 1024 / 1024;

    console.log(`\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –°–¢–†–ï–°–°-–¢–ï–°–¢–ê (–≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –æ—Ç—á–µ—Ç–∞):`);
    console.log(`  üéØ –ö–ª–∏–µ–Ω—Ç–æ–≤: ${clientCount}`);
    console.log(`  üì§ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–±—ã—Ç–∏–π: ${totalSent.toLocaleString()}`);
    console.log(`  üì• –û–∂–∏–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å: ${expectedReceived.toLocaleString()}`);
    console.log(`  ‚úÖ –§–∞–∫—Ç–∏—á–µ—Å–∫–∏ –ø–æ–ª—É—á–µ–Ω–æ: ${receivedCount.toLocaleString()}`);
    console.log(`  üéØ –ü—Ä–æ—Ü–µ–Ω—Ç –¥–æ—Å—Ç–∞–≤–∫–∏: ${deliveryRate}%`);
    console.log(`  ‚ö° –ü—Ä–æ–ø—É—Å–∫–Ω–∞—è —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å: ${throughput.toLocaleString()} events/sec`);
    console.log(`  ‚è±Ô∏è  –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: ${duration}ms`);
    console.log(`  üß† –ü—Ä–∏—Ä–æ—Å—Ç –ø–∞–º—è—Ç–∏: ${memoryIncrease.toFixed(2)}MB`);
    console.log(`  ‚ùå –û—à–∏–±–æ–∫: ${errorCount}`);
    console.log(`  üíæ –ü–∞–º—è—Ç—å –Ω–∞ —Å–æ–±—ã—Ç–∏–µ: ${((memoryIncrease * 1024) / totalSent).toFixed(3)}KB`);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º –æ—Ç—á–µ—Ç–∞
    console.log(`\nüéØ –°–û–û–¢–í–ï–¢–°–¢–í–ò–ï –û–¢–ß–ï–¢–£:`);
    console.log(`  üìä –û–∂–∏–¥–∞–µ–º–∞—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: ~5,000,000 events/sec`);
    console.log(`  üìä –§–∞–∫—Ç–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: ${throughput.toLocaleString()} events/sec`);
    console.log(
      `  üìä –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ: ${throughput >= 5000000 ? '‚úÖ –°–û–û–¢–í–ï–¢–°–¢–í–£–ï–¢' : '‚ö†Ô∏è –ù–ò–ñ–ï –û–ñ–ò–î–ê–ï–ú–û–ì–û'}`,
    );

    broker.destroy();
    process.exit(0);
  }, 1000);
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
console.log('üé¨ –ó–∞–ø—É—Å–∫ —Å—Ç—Ä–µ—Å—Å-—Ç–µ—Å—Ç–∞ –¥–ª—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –æ—Ç—á–µ—Ç–∞...\n');
stressTest();
